{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import compose from 'koa-compose';\n\nexport type PrimitiveType = string | number | boolean | null | undefined;\n\nexport type SerializableData = string | number | boolean | null | undefined | SerializableData[] |\n    { [name: string]: SerializableData };\n\nexport type ReqOptions = {\n  method?: Method | MethodLowercase;\n  base?: string;\n  headers?: Headers | Record<string, string>;\n  query?: URLSearchParams | string | Record<string, PrimitiveType> | [string, PrimitiveType][];\n  params?: Record<string, string | number | boolean>;\n  body?: ReqBody | SerializableData;\n  use?: Middleware[];\n  [index: string]: unknown;\n};\n\nexport type Method = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH' | 'HEAD' | 'PURGE';\nexport type MethodLowercase = 'get' | 'post' | 'put' | 'delete' | 'patch' | 'head' | 'purge';\nexport type ReqBody = string | FormData | URLSearchParams | Blob | BufferSource | ReadableStream;\n\nexport type MiddlewareCtx = {\n  url: URL;\n\n  options: {\n    method: Method;\n    headers: Headers;\n    body: ReqBody;\n  };\n\n  response?: Response;\n  [name: string]: unknown;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Middleware = (ctx: MiddlewareCtx, next: () => Promise<any>) => unknown;\nexport type Query = string | Record<string, PrimitiveType> | [string, PrimitiveType][];\nexport type FormBody = Record<string, PrimitiveType | Blob> | [string, PrimitiveType | Blob, string?][];\n\nfunction createURLSearchParams(query: Query) {\n  if (query.constructor === String) {\n    return new URLSearchParams(query);\n  }\n\n  if (query.constructor === Object) {\n    query = Object.entries(query);\n  }\n\n  const q = new URLSearchParams();\n\n  for (const [name, value] of query as [string, PrimitiveType][]) {\n    if (value !== null && value !== undefined) {\n      q.append(name, value as string);\n    }\n  }\n\n  return q;\n}\n\nfunction createFormData(data: FormBody) {\n  if (data.constructor === Object) {\n    data = Object.entries(data);\n  }\n\n  const f = new FormData();\n\n  for (const [name, value, filename] of data as [string, PrimitiveType | Blob, string?][]) {\n    if (value !== null && value !== undefined) {\n      if (filename) {\n        f.append(name, value as Blob, filename);\n      } else {\n        f.append(name, value as string);\n      }\n    }\n  }\n\n  return f;\n}\n\nclass Teleman {\n  base?: string;\n  headers: Headers;\n  middleware: Middleware[] = [];\n\n  constructor({\n    base,\n    headers\n  }: {\n    base?: string;\n    headers?: Headers | Record<string, string>;\n  } = {}) {\n    if (base) {\n      this.base = base;\n    } else {\n      try {\n        // defaults to document.baseURI in browser\n        this.base = document.baseURI;\n      } catch (e) {\n        // in node.js, ignore\n      }\n    }\n\n    this.headers = new Headers(headers);\n  }\n\n  use(middleware: Middleware) {\n    this.middleware.push(middleware);\n    return this;\n  }\n\n  async fetch<T>(path: string, {\n    method = 'GET',\n    base = this.base,\n    headers,\n    query,\n    params = {},\n    body,\n    use = this.middleware,\n    ...rest\n  }: ReqOptions = {}): Promise<T> {\n    method = method.toUpperCase() as Method;\n    const url = new URL(path.replace(/:([a-z]\\w*)/ig, (_, w) => encodeURIComponent(params[w])), base);\n\n    if (query) {\n      if (!(query instanceof URLSearchParams)) {\n        query = createURLSearchParams(query);\n      }\n\n      query.forEach((value, name) => url.searchParams.append(name, value));\n    }\n\n    if (this.headers && headers) {\n      const h = new Headers(this.headers);\n      new Headers(headers).forEach((value, name) => h.set(name, value));\n      headers = h;\n    } else {\n      headers = new Headers(this.headers || headers);\n    }\n\n    if (body !== undefined && body !== null && !['GET', 'HEAD'].includes(method)) {\n      const contentType = headers.get('content-type') || '';\n\n      if (!contentType && body && body.constructor === Object || contentType.startsWith('application/json')) {\n        if (!headers.has('content-type')) {\n          headers.set('content-type', 'application/json');\n        }\n\n        body = JSON.stringify(body);\n      } else if (contentType.startsWith('multipart/form-data') && body && !(body instanceof FormData)) {\n        body = createFormData(body as FormBody);\n      } else if (contentType.startsWith('application/x-www-form-urlencoded') && body && !(body instanceof URLSearchParams)) {\n        body = createURLSearchParams(body as Query);\n      }\n    }\n\n    const ctx: MiddlewareCtx = {\n      url,\n\n      options: {\n        method,\n        headers,\n        body: body as ReqBody\n      },\n\n      ...rest\n    };\n\n    return <Promise<T>>compose(use)(ctx, () =>\n      fetch(ctx.url.href, ctx.options).then(response => {\n        ctx.response = response;\n        let body: Promise<unknown> = Promise.resolve(response);\n\n        if (!['HEAD', 'head'].includes(ctx.options.method)) {\n          const responseType = response.headers.get('content-type');\n\n          if (responseType) {\n            if (responseType.startsWith('application/json')) {\n              body = response.json();\n            } else if (responseType.startsWith('text/')) {\n              body = response.text();\n            }\n          }\n        }\n\n        if (response.ok) {\n          return body;\n        } else {\n          return body.then(e => {\n            throw e;\n          });\n        }\n      })\n    );\n  }\n\n  get<T>(path: string, query?: Query, options?: ReqOptions) {\n    return this.fetch<T>(path, {\n      ...options,\n      method: 'GET',\n      query\n    });\n  }\n\n  post<T>(path: string, body?: ReqBody | SerializableData, options?: ReqOptions) {\n    return this.fetch<T>(path, {\n      ...options,\n      method: 'POST',\n      body\n    });\n  }\n\n  put<T>(path: string, body?: ReqBody | SerializableData, options?: ReqOptions) {\n    return this.fetch<T>(path, {\n      ...options,\n      method: 'PUT',\n      body\n    });\n  }\n\n  patch<T>(path: string, body?: ReqBody | SerializableData, options?: ReqOptions) {\n    return this.fetch<T>(path, {\n      ...options,\n      method: 'PATCH',\n      body\n    });\n  }\n\n  delete<T>(path: string, query?: Query, options?: ReqOptions) {\n    return this.fetch<T>(path, {\n      ...options,\n      method: 'DELETE',\n      query\n    });\n  }\n\n  head<T>(path: string, query?: Query, options?: ReqOptions) {\n    return this.fetch<T>(path, {\n      ...options,\n      method: 'HEAD',\n      query\n    });\n  }\n\n  purge<T>(path: string, query?: Query, options?: ReqOptions) {\n    return this.fetch<T>(path, {\n      ...options,\n      method: 'PURGE',\n      query\n    });\n  }\n}\n\nexport default Teleman;\nexport { Teleman };\nexport const teleman = new Teleman();\n"],"names":["compose"],"mappings":"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"}