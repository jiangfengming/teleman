{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import compose from \"koa-compose\";\nfunction createURLSearchParams(query) {\n    if (query.constructor === String) {\n        return new URLSearchParams(query);\n    }\n    if (Object.prototype.toString.call(query) === \"[object Object]\") {\n        query = Object.entries(query);\n    }\n    const q = new URLSearchParams();\n    for (const [name, value] of query) {\n        if (value !== null && value !== undefined) {\n            q.append(name, value);\n        }\n    }\n    return q;\n}\nfunction createFormData(data) {\n    if (data.constructor === Object) {\n        data = Object.entries(data);\n    }\n    const f = new FormData();\n    for (const [name, value, filename] of data) {\n        if (value !== null && value !== undefined) {\n            if (filename) {\n                f.append(name, value, filename);\n            }\n            else {\n                f.append(name, value);\n            }\n        }\n    }\n    return f;\n}\nclass Teleman {\n    base;\n    headers;\n    middleware = [];\n    constructor({ base, headers, } = {}) {\n        if (base) {\n            this.base = base;\n        }\n        else {\n            try {\n                // defaults to document.baseURI in browser\n                this.base = document.baseURI;\n            }\n            catch (e) {\n                // in node.js, ignore\n            }\n        }\n        this.headers = new Headers(headers);\n    }\n    use(middleware) {\n        this.middleware.push(middleware);\n        return this;\n    }\n    async fetch(path, { method = \"GET\", base = this.base, headers, query, params = {}, body, use = this.middleware, ...rest } = {}) {\n        method = method.toUpperCase();\n        const url = new URL(path.replace(/:([a-z]\\w*)/gi, (_, w) => encodeURIComponent(params[w])), base);\n        if (query) {\n            if (!(query instanceof URLSearchParams)) {\n                query = createURLSearchParams(query);\n            }\n            query.forEach((value, name) => url.searchParams.append(name, value));\n        }\n        if (this.headers && headers) {\n            const h = new Headers(this.headers);\n            new Headers(headers).forEach((value, name) => h.set(name, value));\n            headers = h;\n        }\n        else {\n            headers = new Headers(this.headers || headers);\n        }\n        if (body !== undefined &&\n            body !== null &&\n            ![\"GET\", \"HEAD\"].includes(method)) {\n            const contentType = headers.get(\"content-type\") || \"\";\n            if ((!contentType && body && body.constructor === Object) ||\n                contentType.startsWith(\"application/json\")) {\n                if (!headers.has(\"content-type\")) {\n                    headers.set(\"content-type\", \"application/json\");\n                }\n                body = JSON.stringify(body);\n            }\n            else if (contentType.startsWith(\"multipart/form-data\") &&\n                body &&\n                !(body instanceof FormData)) {\n                body = createFormData(body);\n            }\n            else if (contentType.startsWith(\"application/x-www-form-urlencoded\") &&\n                body &&\n                !(body instanceof URLSearchParams)) {\n                body = createURLSearchParams(body);\n            }\n        }\n        const ctx = {\n            url,\n            options: {\n                method,\n                headers,\n                body: body,\n            },\n            ...rest,\n        };\n        return compose(use)(ctx, () => fetch(ctx.url.href, ctx.options).then((response) => {\n            ctx.response = response;\n            let body = Promise.resolve(response);\n            if (![\"HEAD\", \"head\"].includes(ctx.options.method)) {\n                const responseType = response.headers.get(\"content-type\");\n                if (responseType) {\n                    if (responseType.startsWith(\"application/json\")) {\n                        body = response.json();\n                    }\n                    else if (responseType.startsWith(\"text/\")) {\n                        body = response.text();\n                    }\n                }\n            }\n            if (response.ok) {\n                return body;\n            }\n            else {\n                return body.then((e) => {\n                    throw e;\n                });\n            }\n        }));\n    }\n    get(path, query, options) {\n        return this.fetch(path, {\n            ...options,\n            method: \"GET\",\n            query,\n        });\n    }\n    post(path, body, options) {\n        return this.fetch(path, {\n            ...options,\n            method: \"POST\",\n            body,\n        });\n    }\n    put(path, body, options) {\n        return this.fetch(path, {\n            ...options,\n            method: \"PUT\",\n            body,\n        });\n    }\n    patch(path, body, options) {\n        return this.fetch(path, {\n            ...options,\n            method: \"PATCH\",\n            body,\n        });\n    }\n    delete(path, query, options) {\n        return this.fetch(path, {\n            ...options,\n            method: \"DELETE\",\n            query,\n        });\n    }\n    head(path, query, options) {\n        return this.fetch(path, {\n            ...options,\n            method: \"HEAD\",\n            query,\n        });\n    }\n    purge(path, query, options) {\n        return this.fetch(path, {\n            ...options,\n            method: \"PURGE\",\n            query,\n        });\n    }\n}\nexport default Teleman;\nexport { Teleman };\nexport const teleman = new Teleman();\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}